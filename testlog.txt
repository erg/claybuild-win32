
[commandline\dispatch]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int32: "], ReprFormatter[Tuple[CapturedLValue[Vector[Char]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Vector[Char], Static[Int32], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(87,39):
     parseInt32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(175,44):
     Int32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\sequences\lazy\mapped\mapped.clay(55,79):
     getValue(MappedValue[Static[Int32], Pointer[Vector[Char]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\algorithms\algorithms.clay(16,29):
     getNext(MappedIterator[Static[Int32], CoordinateRange[Pointer[Vector[Char]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\algorithms\algorithms.clay(22,24):
     reduce(Static[((a, b) => a + b)], Mapped[Static[Int32], SequenceHandle[Vector[Vector[Char]]]])
   C:\clay-autobuild\test\commandline\dispatch\main.clay(9,47):
     ifExpression(Bool, Int32, Int32)
   C:\clay-autobuild\test\commandline\dispatch\main.clay(9,8):
     println(Int32)
   C:\clay-autobuild\test\commandline\dispatch\main.clay(8,11):
     add(Vector[Vector[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\commandline\dispatch\dispatch.clay(96,33):
     invokeCommand(Tuple[Static[add], Static["add integers"]], Vector[Vector[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\commandline\dispatch\dispatch.clay(106,36):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\commandline\dispatch\dispatch.clay(103,27)>, Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(38,82):
     maybeValue(Static[Vector[Char]], Vector[Char], <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\commandline\dispatch\dispatch.clay(103,27)>, (() => usage(..commandTuples)))
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybeValue(Static[Vector[Char]], Maybe[Vector[Char]], <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\commandline\dispatch\dispatch.clay(103,27)>, (() => usage(..commandTuples)))
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybe(Maybe[Vector[Char]], <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\commandline\dispatch\dispatch.clay(103,27)>, (() => usage(..commandTuples)))
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\commandline\dispatch\dispatch.clay(103,16):
     dispatchMain(Tuple[Static[add], Static["add integers"]], Tuple[Static["subtract"], Static[(args => { subtract(args); })], Static["subtract"], Char, Static["integers"]], Tuple[Static[multiply], Static["multiply integers"]], Tuple[Static[divide], Static["divide integers"]], Static[version])
   C:\clay-autobuild\test\commandline\dispatch\main.clay(49,21):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[crypto\digest\md5]
Failure: compiler error
Error:
 
 ###############################
 [F]
 forceinline overload updateAssign(#F, ref dest, forward ..src) {
     dest = infixOperator(dest,F, ..src);
 ----^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\operators.clay(234,4): error: no matching overload found
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\hashmaps\hashmaps.clay(175,0)
         pattern "HashMap[K,V]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\uniquepointers\uniquepointers.clay(89,0)
         pattern "UniqueValue[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\uniquepointers\uniquepointers.clay(44,0)
         pattern "UniquePointer[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\crypto\digest\internal\internal.clay(149,0)
         pattern "PoorManUInt128" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\referencetypes\referencetypes.clay(156,0)
         pattern "T" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\sharedpointers\sharedpointers.clay(61,0)
         pattern "SharedPointer[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\simd\simd.clay(66,0)
         pattern "Vec[T,n]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\vectors\vectors.clay(74,0)
         pattern "Vector[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(228,0)
         pattern "Array[T,n]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(223,0)
         pattern "Array[T,n]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\variants\variants.clay(103,0)
         pattern "V" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\numbers\numbers.clay(188,0)
         predicate "Integer?(A,B) and (TypeSize(A) == TypeSize(B))" failed
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\numbers\numbers.clay(183,0)
         predicate "Numeric?(A,B) and BiggerNumeric?(A,B)" failed
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\pod\pod.clay(92,0)
         pattern "P" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\tuples\tuples.clay(116,0)
         pattern "Tuple[..T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\records\records.clay(138,0)
         pattern "T" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\operators.clay(227,0)
         pattern "T" did not match type "UInt64" of argument 2
     93 universal overloads not shown (show with -full-match-errors option)
 
 compilation context: 
     assign(UInt32, UInt64)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\operators.clay(234,4):
     updateAssign(Static[-], UInt32, UInt64)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\crypto\digest\digest.clay(75,8):
     digestUpdate(MD5Context, Static[""])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\crypto\digest\digest.clay(101,16):
     digest(Static[""], Static["MD5"])
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(9,14):
     expectPrinted(TestStatus, Vector[Char], Static["d41d8cd98f00b204e9800998ecf8427e"], MD5)
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(7,17):
     expectDigest(TestStatus, Static["MD5"], Static["d41d8cd98f00b204e9800998ecf8427e"], Static[""])
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(13,18):
     expectMd5(TestStatus, Static["d41d8cd98f00b204e9800998ecf8427e"], Static[""])
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(18,21):
     <lambda C:\clay-autobuild\test\crypto\digest\md5\test.clay(17,24)>(TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\statics\statics.clay(53,15):
     call(Static[<lambda C:\clay-autobuild\test\crypto\digest\md5\test.clay(17,24)>], TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(83,33):
     FunctionBody[[TestStatus], []](Static[<lambda C:\clay-autobuild\test\crypto\digest\md5\test.clay(17,24)>])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,52):
     new(FunctionBody[[TestStatus], []])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,31):
     Function[[TestStatus], []](SharedPointer[FunctionBody[[TestStatus], []]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,27):
     Function[[TestStatus], []](Static[<lambda C:\clay-autobuild\test\crypto\digest\md5\test.clay(17,24)>])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,71):
     TestCase(Static["md5"], Function[[TestStatus], []], Bool)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,38):
     TestCase(Static["md5"], Static[<lambda C:\clay-autobuild\test\crypto\digest\md5\test.clay(17,24)>])
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(17,16):
     Array[TestCase, 1](TestCase)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(205,55):
     array(TestCase)
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(16,26):
     TestSuite(Static["md5"], Array[TestCase, 1])
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(16,13):
     testMain(TestSuite)
   C:\clay-autobuild\test\crypto\digest\md5\test.clay(15,17):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[crypto\digest\sha2]
Failure: compiler error
Error:
 
 ###############################
 [F]
 forceinline overload updateAssign(#F, ref dest, forward ..src) {
     dest = infixOperator(dest,F, ..src);
 ----^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\operators.clay(234,4): error: no matching overload found
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\hashmaps\hashmaps.clay(175,0)
         pattern "HashMap[K,V]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\uniquepointers\uniquepointers.clay(89,0)
         pattern "UniqueValue[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\uniquepointers\uniquepointers.clay(44,0)
         pattern "UniquePointer[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\crypto\digest\internal\internal.clay(149,0)
         pattern "PoorManUInt128" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\referencetypes\referencetypes.clay(156,0)
         pattern "T" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\sharedpointers\sharedpointers.clay(61,0)
         pattern "SharedPointer[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\simd\simd.clay(66,0)
         pattern "Vec[T,n]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\vectors\vectors.clay(74,0)
         pattern "Vector[T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(228,0)
         pattern "Array[T,n]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(223,0)
         pattern "Array[T,n]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\variants\variants.clay(103,0)
         pattern "V" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\numbers\numbers.clay(188,0)
         predicate "Integer?(A,B) and (TypeSize(A) == TypeSize(B))" failed
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\numbers\numbers.clay(183,0)
         predicate "Numeric?(A,B) and BiggerNumeric?(A,B)" failed
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\pod\pod.clay(92,0)
         pattern "P" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\tuples\tuples.clay(116,0)
         pattern "Tuple[..T]" did not match type "UInt32" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\records\records.clay(138,0)
         pattern "T" did not match type "UInt64" of argument 2
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\operators.clay(227,0)
         pattern "T" did not match type "UInt64" of argument 2
     93 universal overloads not shown (show with -full-match-errors option)
 
 compilation context: 
     assign(UInt32, UInt64)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\operators\operators.clay(234,4):
     updateAssign(Static[-], UInt32, UInt64)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\crypto\digest\digest.clay(75,8):
     digestUpdate(SHA256Context, Static["swordfish"])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\crypto\digest\digest.clay(101,16):
     digest(Static["swordfish"], Static["SHA-256"])
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(9,14):
     expectPrinted(TestStatus, Vector[Char], Static["b9f195c5cc7ef6afadbfbc42892ad47d3b24c6bc94bb510c4564a90a14e8b799"], SHA256)
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(7,17):
     expectDigest(TestStatus, Static["SHA-256"], Static["b9f195c5cc7ef6afadbfbc42892ad47d3b24c6bc94bb510c4564a90a14e8b799"], Static["swordfish"])
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(13,18):
     expectSha256(TestStatus, Static["b9f195c5cc7ef6afadbfbc42892ad47d3b24c6bc94bb510c4564a90a14e8b799"], Static["swordfish"])
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(21,24):
     <lambda C:\clay-autobuild\test\crypto\digest\sha2\test.clay(20,27)>(TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\statics\statics.clay(53,15):
     call(Static[<lambda C:\clay-autobuild\test\crypto\digest\sha2\test.clay(20,27)>], TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(83,33):
     FunctionBody[[TestStatus], []](Static[<lambda C:\clay-autobuild\test\crypto\digest\sha2\test.clay(20,27)>])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,52):
     new(FunctionBody[[TestStatus], []])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,31):
     Function[[TestStatus], []](SharedPointer[FunctionBody[[TestStatus], []]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,27):
     Function[[TestStatus], []](Static[<lambda C:\clay-autobuild\test\crypto\digest\sha2\test.clay(20,27)>])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,71):
     TestCase(Static["sha256"], Function[[TestStatus], []], Bool)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,38):
     TestCase(Static["sha256"], Static[<lambda C:\clay-autobuild\test\crypto\digest\sha2\test.clay(20,27)>])
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(20,16):
     Array[TestCase, 5](TestCase, TestCase, TestCase, TestCase, TestCase)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(205,55):
     array(TestCase, TestCase, TestCase, TestCase, TestCase)
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(19,27):
     TestSuite(Static["sha2"], Array[TestCase, 5])
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(19,13):
     testMain(TestSuite)
   C:\clay-autobuild\test\crypto\digest\sha2\test.clay(18,17):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[dispatch]
Failure: compiler error
Error:
 
 ###############################
     printlnTo(err, "error: ", ..e);
     showBacktrace();
     libc.abort();
 ----^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(45,4): error: undefined name: libc
 
 compilation context: 
     errorNoThrow(Static["invalid LessThanThree, tag = "], Int32)
   C:\clay-autobuild\test\dispatch\main.clay(12,16):
     invalidDispatch(LessThanThree)
   C:\clay-autobuild\test\dispatch\main.clay(22,15):
     foo(LessThanThree)
   C:\clay-autobuild\test\dispatch\main.clay(22,15):
     println(StringLiteralRef)
   C:\clay-autobuild\test\dispatch\main.clay(22,11):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[exceptions\vectors]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["foo"])
   C:\clay-autobuild\test\exceptions\vectors\main.clay(8,13):
     testAndThrow()
   C:\clay-autobuild\test\exceptions\vectors\main.clay(28,16):
     Test()
   C:\clay-autobuild\test\exceptions\vectors\main.clay(61,33):
     push(Vector[Test], Test, Test, Test, Test)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\vectors\vectors.clay(61,8):
     Vector[Test](Test, Test, Test, Test)
   C:\clay-autobuild\test\exceptions\vectors\main.clay(61,28):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[externals]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(StringLiteralRef)
   C:\clay-autobuild\test\externals\main.clay(12,40):
     impl_thrower(StringLiteralRef)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\externals\externals.clay(14,25):
     wrapAsExternal(Static[impl_thrower], Static[1], Pointer[Maybe[Exception]], Pointer[StringLiteralRef])
   C:\clay-autobuild\test\externals\main.clay(15,18):
     external external_thrower

[floats]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["unknown value: "], Float64)
   C:\clay-autobuild\test\floats\main.clay(75,9):
     floatStr(Float64)
   C:\clay-autobuild\test\floats\main.clay(60,29):
     test(Static[floatOrderedEquals?], Float64, Float64)
   C:\clay-autobuild\test\floats\main.clay(54,20):
     testFuncs(Static["ORDERED COMPARISONS"], Tuple[Static[floatOrderedEquals?], Static[floatOrderedGreater?], Static[floatOrderedGreaterEquals?], Static[floatOrderedLesser?], Static[floatOrderedLesserEquals?], Static[floatOrderedNotEquals?], Static[floatOrdered?]], Array[Float64, 5])
   C:\clay-autobuild\test\floats\main.clay(40,13):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[numbers\conversion]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Float32: "], ReprFormatter[Tuple[CapturedLValue[Static["1000"]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(32,13):
     parseFloatWith(Static["1000"], Static[Float32], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]]], [Float64]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(117,43):
     parseFloat32(Static["1000"])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(193,48):
     Float32(Static["1000"])
   C:\clay-autobuild\test\numbers\conversion\main.clay(5,17):
     main(CoordinateRange[Pointer[CStringRef]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main], CoordinateRange[Pointer[CStringRef]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(36,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[numbers\parser\1]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int8: "], ReprFormatter[Tuple[CapturedLValue[Static["111"]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Static["111"], Static[Int8], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(57,38):
     parseInt8(Static["111"])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(169,43):
     Int8(Static["111"])
   C:\clay-autobuild\test\numbers\parser\1\main.clay(6,16):
     println(Int8)
   C:\clay-autobuild\test\numbers\parser\1\main.clay(6,11):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[numbers\parser\2]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int8: "], ReprFormatter[Tuple[CapturedLValue[Static["128"]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Static["128"], Static[Int8], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(57,38):
     parseInt8(Static["128"])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(169,43):
     Int8(Static["128"])
   C:\clay-autobuild\test\numbers\parser\2\main.clay(7,20):
     println(Int8)
   C:\clay-autobuild\test\numbers\parser\2\main.clay(7,15):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[numbers\parser\3]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int8: "], ReprFormatter[Tuple[CapturedLValue[Static["abc9\n"]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Static["abc9\n"], Static[Int8], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(57,38):
     parseInt8(Static["abc9\n"])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(169,43):
     Int8(Static["abc9\n"])
   C:\clay-autobuild\test\numbers\parser\3\main.clay(7,20):
     println(Int8)
   C:\clay-autobuild\test\numbers\parser\3\main.clay(7,15):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[numbers\parser\4]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Float32: "], ReprFormatter[Tuple[CapturedLValue[Static["abc1.2"]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(32,13):
     parseFloatWith(Static["abc1.2"], Static[Float32], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]]], [Float64]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(117,43):
     parseFloat32(Static["abc1.2"])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(193,48):
     Float32(Static["abc1.2"])
   C:\clay-autobuild\test\numbers\parser\4\main.clay(7,21):
     println(Float32)
   C:\clay-autobuild\test\numbers\parser\4\main.clay(7,15):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[parsing]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int32: "], ReprFormatter[Tuple[CapturedLValue[Vector[Char]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Vector[Char], Static[Int32], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(87,39):
     parseInt32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(175,44):
     Int32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(278,31):
     Maybe(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(278,22):
     (x -> Maybe(modifier(move(x))))(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(38,82):
     maybeValue(Static[Vector[Char]], Vector[Char], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybeValue(Static[Vector[Char]], Maybe[Vector[Char]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybe(Maybe[Vector[Char]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,20):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(217,31):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(215,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,43):
     require(Maybe[Int32])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,36):
     call((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(215,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\values\values.clay(14,18):
     mapValues((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(215,11)>, <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(291,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,40):
     Tuple[Int32, Vector[Tuple[Char, Int32]]](Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\tuples\tuples.clay(47,43):
     Tuple(Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,28):
     Maybe(Tuple[Int32, Vector[Tuple[Char, Int32]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(237,24):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(232,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,27):
     maybe(Maybe[Tuple[Int32, Vector[Tuple[Char, Int32]]]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,20):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,43):
     require(Maybe[Int32])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,36):
     call((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\values\values.clay(14,18):
     mapValues((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(291,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,40):
     Tuple[Int32, Vector[Tuple[Char, Int32]]](Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\tuples\tuples.clay(47,43):
     Tuple(Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,28):
     Maybe(Tuple[Int32, Vector[Tuple[Char, Int32]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(237,24):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(232,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,27):
     maybe(Maybe[Tuple[Int32, Vector[Tuple[Char, Int32]]]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,20):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, CoordinateRange[Pointer[Char]])
   C:\clay-autobuild\test\parsing\main.clay(17,32):
     expr(CoordinateRange[Pointer[Char]])
   C:\clay-autobuild\test\parsing\main.clay(41,21):
     calculate(Static["-1"])
   C:\clay-autobuild\test\parsing\main.clay(50,13):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[parsing\calculator]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int32: "], ReprFormatter[Tuple[CapturedLValue[Vector[Char]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Vector[Char], Static[Int32], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(87,39):
     parseInt32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(175,44):
     Int32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(278,31):
     Maybe(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(278,22):
     (x -> Maybe(modifier(move(x))))(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(38,82):
     maybeValue(Static[Vector[Char]], Vector[Char], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybeValue(Static[Vector[Char]], Maybe[Vector[Char]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybe(Maybe[Vector[Char]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,20):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(217,31):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(215,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,43):
     require(Maybe[Int32])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,36):
     call((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(215,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\values\values.clay(14,18):
     mapValues((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(215,11)>, <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(291,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,40):
     Tuple[Int32, Vector[Tuple[Char, Int32]]](Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\tuples\tuples.clay(47,43):
     Tuple(Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,28):
     Maybe(Tuple[Int32, Vector[Tuple[Char, Int32]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(237,24):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(232,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,27):
     maybe(Maybe[Tuple[Int32, Vector[Tuple[Char, Int32]]]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,20):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,43):
     require(Maybe[Int32])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(233,36):
     call((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\values\values.clay(14,18):
     mapValues((parser -> require(parser(input))), <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, <lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(291,11)>)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,40):
     Tuple[Int32, Vector[Tuple[Char, Int32]]](Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\tuples\tuples.clay(47,43):
     Tuple(Int32, Vector[Tuple[Char, Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(234,28):
     Maybe(Tuple[Int32, Vector[Tuple[Char, Int32]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(237,24):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(232,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,27):
     maybe(Maybe[Tuple[Int32, Vector[Tuple[Char, Int32]]]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,20):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, CoordinateRange[Pointer[Char]])
   C:\clay-autobuild\test\parsing\calculator\main.clay(16,32):
     expr(CoordinateRange[Pointer[Char]])
   C:\clay-autobuild\test\parsing\calculator\main.clay(40,21):
     calculate(CStringRef)
   C:\clay-autobuild\test\parsing\calculator\main.clay(53,13):
     main(CoordinateRange[Pointer[CStringRef]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main], CoordinateRange[Pointer[CStringRef]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(36,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[parsing\combinators\generic]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int32: "], ReprFormatter[Tuple[CapturedLValue[Vector[Char]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Vector[Char], Static[Int32], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(87,39):
     parseInt32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(175,44):
     Int32(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(278,31):
     Maybe(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(278,22):
     (x -> Maybe(modifier(move(x))))(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(38,82):
     maybeValue(Static[Vector[Char]], Vector[Char], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybeValue(Static[Vector[Char]], Maybe[Vector[Char]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\maybe\maybe.clay(49,26):
     maybe(Maybe[Vector[Char]], Static[(x -> Maybe(modifier(move(x))))], Static[(() -> nothing(T))])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(277,20):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(275,11)>, CoordinateRange[Pointer[Char]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(365,39):
     maybe(Maybe[Int32], (x -> { push(v, move(x)); return true; }), Static[(() => false)])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(365,31):
     call(<lambda C:/clay-autobuild/build/compiler/src\../../../lib-clay\parsing\combinators\generic\generic.clay(361,11)>, CoordinateRange[Pointer[Char]])
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(33,21):
     require(Maybe[Vector[Int32]])
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(33,19):
     testSeparatedListNotEmpty(TestStatus, Static[false], Static[false])
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(60,29):
     testSeparatedList(TestStatus, Static[false], Static[false])
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(67,29):
     (test => { testSeparatedList(test, #false, #false); })(TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\statics\statics.clay(53,15):
     call(Static[(test => { testSeparatedList(test, #false, #false); })], TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(83,33):
     FunctionBody[[TestStatus], []](Static[(test => { testSeparatedList(test, #false, #false); })])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,52):
     new(FunctionBody[[TestStatus], []])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,31):
     Function[[TestStatus], []](SharedPointer[FunctionBody[[TestStatus], []]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,27):
     Function[[TestStatus], []](Static[(test => { testSeparatedList(test, #false, #false); })])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,71):
     TestCase(Static["separatedList"], Function[[TestStatus], []], Bool)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,38):
     TestCase(Static["separatedList"], Static[(test => { testSeparatedList(test, #false, #false); })])
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(66,16):
     Array[TestCase, 4](TestCase, TestCase, TestCase, TestCase)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(205,55):
     array(TestCase, TestCase, TestCase, TestCase)
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(65,50):
     TestSuite(Static["parsing.combinators.generic"], Array[TestCase, 4])
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(65,13):
     testSuite()
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(81,27):
     testMain(TestSuite)
   C:\clay-autobuild\test\parsing\combinators\generic\test.clay(81,17):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[printing\repr]
Failure: compiler error
Error:
 
 ###############################
 CStringRef("string ref")
 ----------^
 ###############################
 <eval C:\clay-autobuild\test\printing\repr\test.clay(14,41)>(1,10): error: no matching overload found
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\strings\strings.clay(78,0)
         pattern "String" did not match type "Static["string ref"]" of argument 1
     C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\cstringrefs\cstringrefs.clay(18,0)
         pattern "Pointer[T]" did not match type "Static["string ref"]" of argument 1
     92 universal overloads not shown (show with -full-match-errors option)
 
 compilation context: 
     CStringRef(Static["string ref"])
   <eval C:\clay-autobuild\test\printing\repr\test.clay(14,41)>(1,10):
     testWithEval(TestStatus, Static["CStringRef(\"string ref\")"])
   C:\clay-autobuild\test\printing\repr\test.clay(116,24):
     <lambda C:\clay-autobuild\test\printing\repr\test.clay(112,28)>(TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\statics\statics.clay(53,15):
     call(Static[<lambda C:\clay-autobuild\test\printing\repr\test.clay(112,28)>], TestStatus)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(83,33):
     FunctionBody[[TestStatus], []](Static[<lambda C:\clay-autobuild\test\printing\repr\test.clay(112,28)>])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,52):
     new(FunctionBody[[TestStatus], []])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,31):
     Function[[TestStatus], []](SharedPointer[FunctionBody[[TestStatus], []]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\lambdas\lambdas.clay(22,27):
     Function[[TestStatus], []](Static[<lambda C:\clay-autobuild\test\printing\repr\test.clay(112,28)>])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,71):
     TestCase(Static["strings"], Function[[TestStatus], []], Bool)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\test\test.clay(29,38):
     TestCase(Static["strings"], Static[<lambda C:\clay-autobuild\test\printing\repr\test.clay(112,28)>])
   C:\clay-autobuild\test\printing\repr\test.clay(112,16):
     Array[TestCase, 7](TestCase, TestCase, TestCase, TestCase, TestCase, TestCase, TestCase)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\arrays\arrays.clay(205,55):
     array(TestCase, TestCase, TestCase, TestCase, TestCase, TestCase, TestCase)
   C:\clay-autobuild\test\printing\repr\test.clay(18,27):
     TestSuite(Static["repr"], Array[TestCase, 7])
   C:\clay-autobuild\test\printing\repr\test.clay(18,13):
     testMain(TestSuite)
   C:\clay-autobuild\test\printing\repr\test.clay(17,17):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode(Int32)
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main

[uncategorized\41]
Failure: compiler error
Error:
 
 ###############################
     printTo(buf, ..e);
     cstring(buf);
     throw Error(CStringRef(Pointer[Int8](moveVectorBuffer(buf))));
 -----------------------------------------^
 }
 
 ###############################
 C:/clay-autobuild/build/compiler/src\../../../lib-clay\printer\printer.clay(60,41): error: undefined name: moveVectorBuffer
   maybe you need one of:
     import vectors.(moveVectorBuffer);
 
 compilation context: 
     error(Static["invalid Int8: "], ReprFormatter[Tuple[CapturedLValue[Vector[Char]]]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(19,13):
     parseIntWith(Vector[Char], Static[Int8], ExternalCodePointer[AttributeCCall, false, [Pointer[Int8], Pointer[Pointer[Int8]], Int32], [Int32]])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(57,38):
     parseInt8(Vector[Char])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\numbers\parser\parser.clay(169,43):
     Int8(Vector[Char])
   C:\clay-autobuild\test\uncategorized\41\main.clay(9,23):
     println(Static["min = "], Int8)
   C:\clay-autobuild\test\uncategorized\41\main.clay(9,11):
     testMinMaxParser(Static[Int8])
   C:\clay-autobuild\test\uncategorized\41\main.clay(26,20):
     main()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,30):
     getExitCode()
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(22,26):
     runMain(Int32, Pointer[Pointer[Int8]], Static[main])
   C:/clay-autobuild/build/compiler/src\../../../lib-clay\core\system\system.clay(32,13):
     callMain(Static[main], Int32, Pointer[Pointer[Int8]])
     external main
